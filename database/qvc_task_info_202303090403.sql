--
-- Script was generated by Devart dbForge Studio 2020 for MySQL, Version 9.0.338.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 9/3/2023 4:03:41 AM
-- Server version: 8.0.32
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

--
-- Set default database
--
USE qvc_task_info;

--
-- Drop procedure `Proc_GetOne_Employee`
--
DROP PROCEDURE IF EXISTS Proc_GetOne_Employee;

--
-- Drop table `databaseinfo`
--
DROP TABLE IF EXISTS databaseinfo;

--
-- Drop procedure `Proc_GetAll_Employee`
--
DROP PROCEDURE IF EXISTS Proc_GetAll_Employee;

--
-- Drop procedure `Proc_GetByUserPass_Employee`
--
DROP PROCEDURE IF EXISTS Proc_GetByUserPass_Employee;

--
-- Drop procedure `Proc_GetUserByEmail_Employee`
--
DROP PROCEDURE IF EXISTS Proc_GetUserByEmail_Employee;

--
-- Drop procedure `Proc_Insert_Employee`
--
DROP PROCEDURE IF EXISTS Proc_Insert_Employee;

--
-- Drop procedure `Proc_UpdateByUserName_Employee`
--
DROP PROCEDURE IF EXISTS Proc_UpdateByUserName_Employee;

--
-- Drop table `employee`
--
DROP TABLE IF EXISTS employee;

--
-- Drop procedure `Proc_GetByCode_Company`
--
DROP PROCEDURE IF EXISTS Proc_GetByCode_Company;

--
-- Drop procedure `Proc_Insert_Company`
--
DROP PROCEDURE IF EXISTS Proc_Insert_Company;

--
-- Drop table `company`
--
DROP TABLE IF EXISTS company;

--
-- Set default database
--
USE qvc_task_info;

--
-- Create table `company`
--
CREATE TABLE company (
  CompanyID char(36) NOT NULL DEFAULT '',
  CompanyCode varchar(128) NOT NULL DEFAULT '',
  CompanyName varchar(255) NOT NULL DEFAULT '',
  UserName varchar(100) DEFAULT NULL,
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(100) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(100) DEFAULT NULL,
  PRIMARY KEY (CompanyID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Bảng thông tin công ty';

--
-- Create index `CompanyCode` on table `company`
--
ALTER TABLE company
ADD UNIQUE INDEX CompanyCode (CompanyCode);

--
-- Create index `CompanyName` on table `company`
--
ALTER TABLE company
ADD UNIQUE INDEX CompanyName (CompanyName);

DELIMITER $$

--
-- Create procedure `Proc_Insert_Company`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_Insert_Company (IN `@CompanyID` char(36), IN `@CompanyCode` varchar(128), IN `@CompanyName` varchar(255), IN `@UserName` varchar(100), IN `@CreatedDate` datetime, IN `@CreatedBy` varchar(100), IN `@ModifiedDate` datetime, IN `@ModifiedBy` varchar(100))
COMMENT 'Thêm mới công ty'
BEGIN
  INSERT INTO company (CompanyID, CompanyCode, CompanyName, UserName, CreatedDate, CreatedBy, ModifiedDate, ModifiedBy)
    VALUES (`@CompanyID`, `@CompanyCode`, `@CompanyName`, `@UserName`, `@CreatedDate`, `@CreatedBy`, `@ModifiedDate`, `@ModifiedBy`);
END
$$

--
-- Create procedure `Proc_GetByCode_Company`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_GetByCode_Company (IN `@CompanyCode` varchar(128))
COMMENT 'LẤy thông tin công ty từ mã công ty'
BEGIN
  SELECT
    *
  FROM company c
  WHERE c.CompanyCode = `@CompanyCode`;
END
$$

DELIMITER ;

--
-- Create table `employee`
--
CREATE TABLE employee (
  EmployeeID char(36) NOT NULL DEFAULT '',
  EmployeeCode varchar(20) NOT NULL DEFAULT '',
  EmployeeName varchar(100) NOT NULL DEFAULT '',
  UserName varchar(128) NOT NULL DEFAULT '',
  Password varchar(128) NOT NULL DEFAULT '',
  AccountType tinyint DEFAULT NULL COMMENT 'Trạng thái tài khoản; 0: Ngưng sử dụng; 1: Đang sử dụng; 2: Chưa xác minh',
  DateOfBirth date DEFAULT NULL,
  Gender tinyint DEFAULT NULL COMMENT 'Giới tính; 0: Nữ; 1: Nam; 2: Khác',
  Email varchar(100) DEFAULT NULL,
  PhoneNumber varchar(50) DEFAULT NULL,
  Address varchar(255) DEFAULT NULL,
  CompanyID char(36) DEFAULT NULL,
  DepartmentID char(36) DEFAULT NULL,
  PositionID char(36) DEFAULT NULL,
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(100) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(100) DEFAULT NULL,
  Code int DEFAULT NULL COMMENT 'Mã xác thực tài khoản',
  Role int DEFAULT NULL,
  PRIMARY KEY (EmployeeID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Bảng thông tin nhân viên';

--
-- Create index `Email` on table `employee`
--
ALTER TABLE employee
ADD UNIQUE INDEX Email (Email);

--
-- Create index `EmployeeCode` on table `employee`
--
ALTER TABLE employee
ADD UNIQUE INDEX EmployeeCode (EmployeeCode);

--
-- Create index `UserName` on table `employee`
--
ALTER TABLE employee
ADD UNIQUE INDEX UserName (UserName);

DELIMITER $$

--
-- Create procedure `Proc_UpdateByUserName_Employee`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_UpdateByUserName_Employee (IN `@EmployeeID` char(36), IN `@EmployeeCode` varchar(20), IN `@EmployeeName` varchar(100), IN `@UserName` varchar(128), IN `@Password` varchar(128), IN `@AccountType` tinyint, IN `@DateOfBirth` date, IN `@Gender` tinyint, IN `@Email` varchar(100), IN `@PhoneNumber` varchar(50), IN `@Address` varchar(255), IN `@CompanyID` char(36), IN `@DepartmentID` char(36), IN `@PositionID` char(36), IN `@CreatedDate` datetime, IN `@CreatedBy` varchar(100), IN `@ModifiedDate` datetime, IN `@ModifiedBy` varchar(100), IN `@Code` int, IN `@Role` int)
BEGIN
  UPDATE employee e
  SET EmployeeCode = `@EmployeeCode`,
      EmployeeName = `@EmployeeName`,
      UserName = `@UserName`,
      Password = `@Password`,
      AccountType = `@AccountType`,
      DateOfBirth = `@DateOfBirth`,
      Gender = `@Gender`,
      Email = `@Email`,
      PhoneNumber = `@PhoneNumber`,
      Address = `@Address`,
      CompanyID = `@CompanyID`,
      DepartmentID = `@DepartmentID`,
      PositionID = `@PositionID`,
      ModifiedDate = `@ModifiedDate`,
      ModifiedBy = `@ModifiedBy`,
      Code = `@Code`,
      Role = `@Role`
  WHERE UserName = `@UserName`;
END
$$

--
-- Create procedure `Proc_Insert_Employee`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_Insert_Employee (IN `@EmployeeID` char(36), IN `@EmployeeCode` varchar(20), IN `@EmployeeName` varchar(100), IN `@UserName` varchar(128), IN `@Password` varchar(128), IN `@AccountType` tinyint, IN `@DateOfBirth` date, IN `@Gender` tinyint, IN `@Email` varchar(100), IN `@PhoneNumber` varchar(50), IN `@Address` varchar(255), IN `@CompanyID` char(36), IN `@DepartmentID` char(36), IN `@PositionID` char(36), IN `@CreatedDate` datetime, IN `@CreatedBy` varchar(100), IN `@ModifiedDate` datetime, IN `@ModifiedBy` varchar(100), IN `@Code` int, IN `@Role` int)
BEGIN
  INSERT INTO employee (EmployeeID, EmployeeCode, EmployeeName, UserName, Password, AccountType, DateOfBirth, Gender, Email, PhoneNumber, Address, CompanyID, DepartmentID, PositionID, CreatedDate, CreatedBy, ModifiedDate, ModifiedBy, Code, Role)
    VALUES (`@EmployeeID`, `@EmployeeCode`, `@EmployeeName`, `@UserName`, `@Password`, `@AccountType`, `@DateOfBirth`, `@Gender`, `@Email`, `@PhoneNumber`, `@Address`, `@CompanyID`, `@DepartmentID`, `@PositionID`, `@CreatedDate`, `@CreatedBy`, `@ModifiedDate`, `@ModifiedBy`, `@Code`, `@Role`);
END
$$

--
-- Create procedure `Proc_GetUserByEmail_Employee`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_GetUserByEmail_Employee (IN `@Email` varchar(100))
COMMENT 'Lấy tên user'
BEGIN
  SELECT
    *
  FROM employee e
  WHERE e.Email = `@Email`;
END
$$

--
-- Create procedure `Proc_GetByUserPass_Employee`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_GetByUserPass_Employee (IN `@UserName` varchar(128), IN `@Email` varchar(100), IN `@Password` varchar(128))
COMMENT 'Kiểm tra đăng nhập'
BEGIN
  SELECT
    COUNT(*) AS Record
  FROM employee e
  WHERE (e.UserName = `@UserName`
  AND e.Password = `@Password`)
  OR (e.Email = `@Email`
  AND e.Password = `@Password`);
END
$$

--
-- Create procedure `Proc_GetAll_Employee`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_GetAll_Employee ()
COMMENT 'Lấy tất cả người dùng'
BEGIN
  SELECT
    *
  FROM employee e;
END
$$

DELIMITER ;

--
-- Create table `databaseinfo`
--
CREATE TABLE databaseinfo (
  DatabaseID char(36) NOT NULL DEFAULT '',
  DatabaseCode varchar(128) NOT NULL DEFAULT '',
  DatabaseName varchar(128) NOT NULL DEFAULT '',
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(100) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(100) DEFAULT NULL,
  PRIMARY KEY (DatabaseID)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Bảng thông tin databse';

--
-- Create index `DatabaseCode` on table `databaseinfo`
--
ALTER TABLE databaseinfo
ADD UNIQUE INDEX DatabaseCode (DatabaseCode);

--
-- Create index `DatabaseName` on table `databaseinfo`
--
ALTER TABLE databaseinfo
ADD UNIQUE INDEX DatabaseName (DatabaseName);

DELIMITER $$

--
-- Create procedure `Proc_GetOne_Employee`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_GetOne_Employee (IN `@EmployeeID` char(36), IN `@UserName` varchar(128), IN `@Email` varchar(100))
BEGIN
  SELECT
    e.EmployeeID,
    e.EmployeeCode,
    e.EmployeeName,
    e.UserName,
    e.Password,
    e.AccountType,
    e.DateOfBirth,
    e.Gender,
    e.Email,
    e.PhoneNumber,
    e.Address,
    e.CompanyID,
    e.DepartmentID,
    e.PositionID,
    e.CreatedDate,
    e.CreatedBy,
    e.ModifiedDate,
    e.ModifiedBy,
    e.Code
  FROM employee e
  WHERE e.EmployeeID = `@EmployeeID`
  OR e.UserName = `@UserName`
  OR e.Email = `@Email`;
END
$$

DELIMITER ;

-- 
-- Dumping data for table employee
--
INSERT INTO employee VALUES
('67c3146a-a7d4-4281-bd28-568d83a20c67', 'hong', 'Quách Hồng', 'hong', '123', 1, NULL, 0, 'honquach@gmail.com', '0933222333', NULL, NULL, NULL, NULL, '2023-03-08 22:38:11', NULL, '2023-03-08 22:38:16', NULL, 0, 0),
('8116d468-4191-4e97-887b-c2d47f82ce45', 'lich', 'Quách Văn Lịch', 'lich', '123', 1, NULL, 1, 'lichvan@gmail.com', '0922333888', NULL, NULL, NULL, NULL, '2023-03-08 22:33:40', NULL, '2023-03-08 22:33:51', NULL, 0, 0),
('82ba767a-5feb-43da-baef-32784e611064', 'le', 'Lệ Quách', 'le', '123', 1, NULL, 0, 'lequach@gmail.com', '0988333444', NULL, NULL, NULL, NULL, '2023-03-08 22:37:33', NULL, '2023-03-08 22:37:39', NULL, 0, 0),
('b336bcc0-8922-4e9f-9d2f-4e8a186aa4fa', 'ly', 'Lý Quách', 'ly', '123', 1, NULL, 0, 'lyquach@gmail.com', '0977334342', NULL, NULL, NULL, NULL, '2023-03-08 22:32:46', NULL, '2023-03-08 22:33:06', NULL, 0, 0),
('ce0a72d5-cf4c-4fbd-a728-cf16f368b848', 'trang', 'Thuỳ Trang', 'trang', '123', 1, '1999-08-28', 0, 'thuytrang1999vu@gmail.com', '0955444333', 'Hà Nội', NULL, NULL, NULL, '2023-02-28 23:07:52', NULL, '2023-02-28 23:08:04', NULL, 0, 0),
('f66e0fe6-c9bf-4c03-baee-63409e389295', 'canh', 'Quách Cảnh', 'canh', '123', 1, '1999-06-01', 1, 'canhquach45@gmail.com', '0987666555', 'Hà Nội', NULL, NULL, NULL, '2023-02-28 22:27:13', NULL, '2023-02-28 22:27:21', NULL, 0, 0),
('f82cdb60-5820-4071-b204-756ee3f50238', 'thanh', 'Thanh Em', 'thanh', '123', 1, '1996-09-04', 1, 'thanh@gmail.com', '0988333444', NULL, NULL, NULL, NULL, '2023-03-08 09:26:52', NULL, '2023-03-08 09:27:02', NULL, 0, 0),
('f8e66105-73bd-4021-a2df-87347a2215c9', 'teo', 'Quách Văn Tèo', 'teo', '123', 1, NULL, 0, 'teovan@gmail.com', '0345999222', NULL, NULL, NULL, NULL, '2023-03-08 22:34:31', NULL, '2023-03-08 22:34:40', NULL, 0, 0);

-- 
-- Dumping data for table databaseinfo
--
-- Table qvc_task_info.databaseinfo does not contain any data (it is empty)

-- 
-- Dumping data for table company
--
INSERT INTO company VALUES
('090d7b23-0cb8-4a60-9b25-6a16a87713e4', 'VTTT', 'Công ty trang', 'trang', '2023-03-08 10:32:05', NULL, '2023-03-08 10:32:05', NULL),
('157474a7-44eb-47a0-8a9d-5afe675c867c', 'QVC', 'Công ty QVC', 'canh', '2023-02-28 23:09:30', NULL, '2023-02-28 23:09:30', NULL),
('55f2d62b-a1f3-43c3-8727-68e71bbf6dd0', 'CP09095', 'Công ty test', 'trang', '2023-03-08 13:39:32', NULL, '2023-03-08 13:39:32', NULL);

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;